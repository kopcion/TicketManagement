
  DROP TABLE IF EXISTS USERS CASCADE ;
  DROP TABLE IF EXISTS PURCHASES CASCADE ;
  DROP TABLE IF EXISTS LOGINS CASCADE ;
  DROP TABLE IF EXISTS TICKETS CASCADE ;
  DROP TABLE IF EXISTS EVENTS CASCADE ;
  DROP TABLE IF EXISTS TICKET_KINDS CASCADE ;
  DROP TABLE IF EXISTS CLIENTS_DISCOUNTS CASCADE ;
  DROP TABLE IF EXISTS DISCOUNTS CASCADE ;
  DROP TABLE IF EXISTS EVENT_Types CASCADE ;

  CREATE TABLE TICKET_KINDS(
    Kind VARCHAR PRIMARY KEY,
    Discount NUMERIC DEFAULT 0
  );

  create table USERS (
    ID NUMERIC PRIMARY KEY,
    Name VARCHAR NOT NULL,
    Surname VARCHAR NOT NULL
  );

  CREATE TABLE DISCOUNTS(
    ID NUMERIC PRIMARY KEY,
    Dicsount NUMERIC DEFAULT 0
  );

  CREATE TABLE CLIENTS_DISCOUNTS(
    ID NUMERIC PRIMARY KEY,
    Discount_ID NUMERIC REFERENCES DISCOUNTS(ID),
    Clients_ID NUMERIC NOT NULL REFERENCES USERS(ID),
    Date_From DATE NOT NULL,
    Date_Due DATE NOT NULL CHECK(Date_From < Date_Due )
  );

  CREATE TABLE EVENT_Types(
    type VARCHAR PRIMARY KEY,
    price NUMERIC NOT NULL
  );

  CREATE TABLE EVENTS(
    ID NUMERIC PRIMARY KEY,
    Name VARCHAR NOT NULL,
    Type VARCHAR NOT NULL REFERENCES EVENT_Types(type),
    Date DATE NOT NULL
  );

  CREATE TABLE TICKETS(
    ID NUMERIC PRIMARY KEY,
    Event_ID NUMERIC NOT NULL REFERENCES EVENTS(ID),
    Kind VARCHAR NOT NULL REFERENCES TICKET_KINDS(Kind)
  );

  create table PURCHASES (
    User_ID NUMERIC NOT NULL REFERENCES USERS(ID),
    Ticket_ID NUMERIC NOT NULL REFERENCES TICKETS(ID),
    Date DATE NOT NULL
  );

  CREATE TABLE LOGINS(
    ID NUMERIC PRIMARY KEY REFERENCES USERS(ID),
    Username VARCHAR NOT NULL,
    Password VARCHAR NOT NULL
  );